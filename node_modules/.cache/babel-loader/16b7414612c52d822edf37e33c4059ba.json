{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Library/Mobile Documents/com~apple~CloudDocs/Code/React/github-finder/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css'; // Function turned into a class.  Extends component class\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      repos: [],\n      user: {},\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=\n      ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n      ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}?client_id=\n      ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n      ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=\n      ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n      ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        repos: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => this.setState({\n      users: [],\n      loading: false\n    });\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const {\n      users,\n      user,\n      repos,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          alert: this.state.alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Search, {\n                searchUsers: this.searchUsers,\n                clearUsers: this.clearUsers,\n                showClear: users.length > 0 ? true : false,\n                setAlert: this.setAlert\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Users, {\n                loading: loading,\n                users: users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/user/:login\",\n            render: props => /*#__PURE__*/_jsxDEV(User // ... is spread operator\n            , { ...props,\n              getUser: this.getUser,\n              getUserRepos: this.getUserRepos,\n              user: user,\n              repos: repos,\n              loading: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this); // // Using straight Javascript\n    // return React.createElement('div', { className: 'App' }, React.createElement('h1', null, 'Hello from React')\n    // );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/eric/Library/Mobile Documents/com~apple~CloudDocs/Code/React/github-finder/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","App","state","users","repos","user","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\n\n\nimport axios from 'axios';\nimport './App.css';\n\n// Function turned into a class.  Extends component class\nclass App extends Component {\n  state = {\n    users: [],\n    repos: [],\n    user: {},\n    loading: false,\n    alert: null\n  };\n\n\n  // async componentDidMount() {\n  //   console.log(process.env.REACT_APP_GITHUB_CLIENT_SECRET);\n\n  //   this.setState({ loading: true });\n    \n\n  //   const res = await axios.get(`https://api.github.com/users?client_id=$\n  //     {process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n  //     {process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    \n  //   this.setState({ users: res.data, loading: false });\n  // };\n\n\n  // Search Github users\n  // Since is an arrow functin, call async before the parameter\n  searchUsers = async text => {\n    this.setState({ loading: true });\n\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=\n      ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n      ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n  \n    this.setState({ users: res.data.items, loading: false });\n  };\n\n\n  // Get single Github user\n  getUser = async username => {\n    this.setState({ loading: true });\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=\n      ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n      ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n  \n    this.setState({ user: res.data, loading: false });\n  };\n  \n\n  // Get user repos\n  getUserRepos = async username => {\n    this.setState({ loading: true });\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=\n      ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n      ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n  \n    this.setState({ repos: res.data, loading: false });\n  }\n\n\n  // Clear users from state\n  clearUsers = () => this.setState({ users: [], loading: false });\n\n  \n  // Set Alert\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type }});\n\n    setTimeout(() => this.setState({ alert: null }), 5000);\n  };\n\n\n  render() {\n    const { users, user, repos, loading } = this.state;\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Alert alert={ this.state.alert } />\n          <Switch>\n            <Route exact path='/' render={props => (\n              <Fragment>\n                <Search \n                  searchUsers={ this.searchUsers } \n                  clearUsers={ this.clearUsers } \n                  showClear={ users.length > 0 ? true : false }\n                  setAlert={ this.setAlert }\n                />\n                <Users loading={ loading } users={ users } />\n              </Fragment>\n            )} />\n            <Route exact path='/about' component={About} />\n            <Route \n              exact \n              path='/user/:login' \n              render={props => (\n              <User \n                // ... is spread operator\n                { ...props } \n                getUser={this.getUser}\n                getUserRepos={this.getUserRepos} \n                user={user}\n                repos={repos}\n                loading={true} />\n            )} />\n          </Switch>\n          <div className='container'>\n\n          </div>\n        </div>\n      </Router>\n    );\n\n    // // Using straight Javascript\n    // return React.createElement('div', { className: 'App' }, React.createElement('h1', null, 'Hello from React')\n    // );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}