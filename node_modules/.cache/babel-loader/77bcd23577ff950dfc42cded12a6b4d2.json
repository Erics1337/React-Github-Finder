{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Library/Mobile Documents/com~apple~CloudDocs/Code/React/github-finder/src/components/users/User.js\";\nimport React, { Fragment, Component } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'; // class-based component wont have any state but will use a lifecycle method componentDidMount to fire off getUser() in app.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class User extends Component {\n  componentDidMount() {\n    // .match.params pulls :login from getUser props\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  render() {\n    const {\n      name,\n      company,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable\n    } = this.props.user;\n    const {\n      loading\n    } = this.props;\n    if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn btn-light\",\n        children: \"Back To Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/Users/eric/Library/Mobile Documents/com~apple~CloudDocs/Code/React/github-finder/src/components/users/User.js"],"names":["React","Fragment","Component","Spinner","PropTypes","Link","User","componentDidMount","props","getUser","match","params","login","render","name","company","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","user","loading","propTypes","bool","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAGA;;;AACA,OAAO,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAChCK,EAAAA,iBAAiB,GAAI;AACjB;AACA,SAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,KAA3C;AACH;;AASDC,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,IADE;AAEFC,MAAAA,OAFE;AAGFC,MAAAA,UAHE;AAIFC,MAAAA,QAJE;AAKFC,MAAAA,GALE;AAMFC,MAAAA,IANE;AAOFP,MAAAA,KAPE;AAQFQ,MAAAA,QARE;AASFC,MAAAA,SATE;AAUFC,MAAAA,SAVE;AAWFC,MAAAA,YAXE;AAYFC,MAAAA,YAZE;AAaFC,MAAAA;AAbE,QAcF,KAAKjB,KAAL,CAAWkB,IAdf;AAgBA,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKnB,KAAzB;AAEA,QAAGmB,OAAH,EAAY,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AAEZ,wBACI,QAAC,QAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA1C+B;AAAvBrB,I,CAMFsB,S,GAAY;AACfD,EAAAA,OAAO,EAAEvB,SAAS,CAACyB,IADJ;AAEfH,EAAAA,IAAI,EAAEtB,SAAS,CAAC0B,MAAV,CAAiBC,UAFR;AAGftB,EAAAA,OAAO,EAAEL,SAAS,CAAC4B,IAAV,CAAeD;AAHT,C;AAuCvB,eAAezB,IAAf","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\n// class-based component wont have any state but will use a lifecycle method componentDidMount to fire off getUser() in app.js\nexport class User extends Component {\n    componentDidMount () {\n        // .match.params pulls :login from getUser props\n        this.props.getUser(this.props.match.params.login);\n    }\n\n    static propTypes = {\n        loading: PropTypes.bool,\n        user: PropTypes.object.isRequired,\n        getUser: PropTypes.func.isRequired\n    }\n\n\n    render() {\n        const {\n            name,\n            company,\n            avatar_url,\n            location,\n            bio,\n            blog,\n            login,\n            html_url,\n            followers,\n            following,\n            public_repos,\n            public_gists,\n            hireable\n        } = this.props.user;\n\n        const { loading } = this.props;\n\n        if(loading) return <Spinner />\n\n        return (\n            <Fragment>\n                <Link to='/' className='btn btn-light' >\n                    Back To Search \n                </Link>\n\n            </Fragment>\n        )\n    }\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}