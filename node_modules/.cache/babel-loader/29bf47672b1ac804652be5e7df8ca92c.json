{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Library/Mobile Documents/com~apple~CloudDocs/Code/React/github-finder/src/components/users/Users.js\";\nimport React from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types'; // To generate a component with react snippets type rce\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = ({\n  users,\n  loading\n}) => {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: userStyle,\n      children: users.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = Users;\nUsers.propTypes = {\n  users: PropTypes.array.isRequired,\n  users: PropTypes.bool.isRequired\n};\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n};\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/eric/Library/Mobile Documents/com~apple~CloudDocs/Code/React/github-finder/src/components/users/Users.js"],"names":["React","UserItem","Spinner","PropTypes","Users","users","loading","userStyle","map","user","id","propTypes","array","isRequired","bool","display","gridTemplateColumns","gridGap","User"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAGA;;;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAClC,MAAGA,OAAH,EAAY;AACR,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBACI;AAAK,MAAA,KAAK,EAAEC,SAAZ;AAAA,gBAEKF,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACX,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADH;AAFL;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;AACJ,CAbD;;KAAMN,K;AAeNA,KAAK,CAACO,SAAN,GAAkB;AACdN,EAAAA,KAAK,EAAEF,SAAS,CAACS,KAAV,CAAgBC,UADT;AAEdR,EAAAA,KAAK,EAAEF,SAAS,CAACW,IAAV,CAAeD;AAFR,CAAlB;AAKA,MAAMN,SAAS,GAAG;AACdQ,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,mBAAmB,EAAE,gBAFP;AAGdC,EAAAA,OAAO,EAAE;AAHK,CAAlB;AAMA,eAAeC,IAAf","sourcesContent":["import React from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types'\n\n\n// To generate a component with react snippets type rce\nconst Users = ({ users, loading }) => {\n    if(loading) {\n        return <Spinner />\n    } else {\n        return (\n            <div style={userStyle}>\n                {/* loop through users in state, for each one user variable represents entire user object which is passed in as a prop*/}\n                {users.map(user => (\n                    <UserItem key={user.id} user={user}/>\n                ))}\n            </div>\n        );\n    }\n}\n\nUsers.propTypes = {\n    users: PropTypes.array.isRequired,\n    users: PropTypes.bool.isRequired,\n}\n\nconst userStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: '1rem'\n}\n\nexport default User"]},"metadata":{},"sourceType":"module"}